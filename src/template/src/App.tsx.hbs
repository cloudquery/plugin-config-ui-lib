import { ConfigUIForm, PluginContextProvider, useFormInit } from '@cloudquery/plugin-config-ui-lib';

import { DevWrapper } from '@cloudquery/plugin-config-ui-lib/components/devWrapper';

import { useConfig } from './hooks/useConfig';
import { pluginUiMessageHandler } from './utils/messageHandler';
import { prepareSubmitValues } from './utils/prepareSubmitValues';

{{#if createTablesSelector}}
const getTablesData = () => import('./data/__tables.json');
{{/if}}

{{#if createServicesSelector}}
const getServicesData = () => import('./data/__services.json');
{{/if}}

function App({ container }: { container?: HTMLElement }) {
  const { initialValues, initialized, teamName, context, isDisabled } =
    useFormInit(pluginUiMessageHandler);

  const config = useConfig({ initialValues });

  return (
    <DevWrapper>
      <PluginContextProvider
        config={config}
        teamName={teamName}
        {{#if createTablesSelector}}
        getTablesData={getTablesData}
        {{/if}}
        {{#if createServicesSelector}}
        getServicesData={getServicesData}
        {{/if}}
        hideStepper={context === 'wizard'} // TODO: Delete after iframe deprecation
        pluginUiMessageHandler={pluginUiMessageHandler}
        initialValues={initialValues}
        isDisabled={isDisabled}
      >
        {initialized && <ConfigUIForm container={container} prepareSubmitValues={prepareSubmitValues} />}
      </PluginContextProvider>
    </DevWrapper>
  );
}

export default App;
